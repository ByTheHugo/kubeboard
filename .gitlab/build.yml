security:gitleaks:
  stage: security
  image:
    name: "${REGISTRY_URL}/paas/zricethezav/gitleaks:${GITLEAKS_VERSION}"
    entrypoint: [""]
  before_script:
    - gitleaks version
  script:
    - gitleaks dir --follow-symlinks -v -f junit -r gitleaks-report.xml
  artifacts:
    paths:
      - gitleaks-report.xml
    reports:
      junit: gitleaks-report.xml


lint:dockerfile:hadolint:
  stage: lint
  image: "${REGISTRY_URL}/paas/hadolint/hadolint:${HADOLINT_VERSION}"
  before_script:
    - hadolint --version
  script:
    - hadolint Dockerfile


lint:dockerfile:trivy:
  stage: lint
  image: "${REGISTRY_URL}/paas/aquasec/trivy:${TRIVY_VERSION}"
  before_script:
    - trivy --version
    # Downloading template format from Github
    - wget https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/junit.tpl -O junit.tpl
  script:
    # Fail on specified vulnerabilities
    - trivy config Dockerfile --exit-code 1 --severity "$TRIVY_SEVERITY" --format template --template "@junit.tpl" -o junit-report.xml
  artifacts:
    paths:
      - junit-report.xml
    reports:
      junit: junit-report.xml


lint:helm:
  stage: lint
  image: "${REGISTRY_URL}/paas/alpine/helm:${HELM_VERSION}"
  before_script:
    - helm version
  script:
    - helm lint chart


tests:pytest:
  stage: tests
  image: "alpine:${ALPINE_VERSION}"
  before_script:
    - apk add --no-cache python3 py3-pip
    - pip install --no-cache-dir --break-system-packages -r requirements.txt -r tests/requirements.txt
    - python3 -V
    - python3 -m pytest -V
  script:
    - |
      python3 -m pytest tests \
        --junit-xml="${RESULTS_FOLDER}/pytest-${CI_COMMIT_SHORT_SHA}.xml" \
        --html="${RESULTS_FOLDER}/pytest-${CI_COMMIT_SHORT_SHA}.html"
  artifacts:
    paths:
      - "${RESULTS_FOLDER}"
    reports:
      junit: "$RESULTS_FOLDER/pytest-${CI_COMMIT_SHORT_SHA}.xml"
    expire_in: 2 hour
    when: always
  retry: 2


build:docker:buildah:
  stage: build
  image: "${REGISTRY_URL}/paas/buildah/stable:${BUILDAH_VERSION}"
  before_script:
    - buildah version
  script:
    - buildah --storage-driver vfs bud --build-arg BUILD_DATETIME="$(date --rfc-3339=seconds | sed 's/ /T/')" -t "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}" .
    - buildah --storage-driver vfs push -f v2s2 "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"


cve:docker:trivy:
  stage: cve
  image:
    name: "${REGISTRY_URL}/paas/aquasec/trivy:${TRIVY_VERSION}"
    entrypoint: [""]
  variables:
    GIT_STRATEGY: none
  before_script:
      - trivy --version

      # Downloading template format from Github
      - wget https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/junit.tpl -O junit.tpl

      # Update vuln db
      - trivy clean --scan-cache
      - trivy --cache-dir .trivycache/ image --download-db-only --no-progress
  script:
      # Fail on specified vulnerabilities
      - |
        trivy image \
          --exit-code 1 \
          --severity "$TRIVY_SEVERITY" \
          --no-progress \
          --scanners vuln \
          --format template \
          --template "@junit.tpl" \
          -o junit-report.xml \
          "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
  cache:
      paths:
      - .trivycache/
  artifacts:
      paths:
          - junit-report.xml
      reports:
          junit: junit-report.xml
  rules:
    - if: '$IGNORE_TRIVY_CVE=="true"'
      allow_failure: true
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - when: on_success


post:docker:clean:
  stage: .post
  image: "${REGISTRY_URL}/paas/myifeng/quay.io_skopeo_stable:${SKOPEO_VERSION}"
  before_script:
    - skopeo -v
  script:
    - skopeo delete "docker://${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
  allow_failure: true
  when: on_failure
